server.port=8086
server.address=0.0.0.0


#mysql-database1
spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.primary.username=portal
spring.datasource.primary.password=mS2fBauC1U5DbUcMW2JzDw==
spring.datasource.primary.url=jdbc:mysql://192.168.2.11:3306/portal?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2b8

#####################解决[No operations allowed after connection close]########################################
#☆☆☆数据库连接已经关闭或者失效后仍然在执行操作,导致:mysql服务没返回数据
#1.客户端连接池中连接，已经失效；但是：连接池还没有检测到；当操作数据库时，启用该连接，抛出该错误
#2.mysql服务器，已关闭该连接，但：客户端连接池中该连接，尚未检测到。当用该连接操作数据库时，抛出该错。
#验证连接的有效性
spring.datasource.primary.test-while-idle=true
#获取连接时候验证，会影响性能
spring.datasource.primary.test-on-borrow=true
#在连接归还到连接池时是否测试该连接
spring.datasource.primary.test-on-return=true
spring.datasource.primary.validation-query=SELECT 1 FROM DUAL
#空闲连接回收的时间间隔，与test-while-idle一起使用，设置5分钟
spring.datasource.primary.time-between-eviction-runs-millis=300000
#连接池空闲连接的有效时间 ，设置30分钟
spring.datasource.primary.min-evictable-idle-time-millis=1800000
spring.datasource.primary.initial-size=5
#指定连接池中最大的活跃连接数.
spring.datasource.primary.max-active=50
#指定连接池等待连接返回的最大等待时间，毫秒单位.
spring.datasource.primary.max-wait=60000
#指定必须保持连接的最小值
spring.datasource.primary.min-idle=5
##########################################################################







#mysql-database2
spring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.secondary.username=root
spring.datasource.secondary.password=root
spring.datasource.secondary.url=jdbc:mysql://192.168.2.11:3306/cloudflat?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2b8

########################解决[No operations allowed after connection close]##################################################
#wait_timeout       指的是mysql在关闭一个非交互的连接之前所要等待的秒数
#interactive_time   指的是mysql在关闭一个交互的连接之前所要等待的秒数
#对于交互和非交互连接，说得直白一点就是，通过mysql客户端连接数据库是交互式连接，通过jdbc连接数据库是非交互式连接。

#☆☆☆数据库连接已经关闭或者失效后仍然在执行操作,导致:mysql服务没返回数据
#1.客户端连接池中连接，已经失效；但是：连接池还没有检测到；当操作数据库时，启用该连接，抛出该错误
#2.mysql服务器，已关闭该连接，但：客户端连接池中该连接，尚未检测到。当用该连接操作数据库时，抛出该错。
#验证连接的有效性
spring.datasource.secondary.test-while-idle=true
#获取连接时候验证，会影响性能
spring.datasource.secondary.test-on-borrow=true
#在连接归还到连接池时是否测试该连接
spring.datasource.secondary.test-on-return=true
spring.datasource.secondary.validation-query=SELECT 1 FROM DUAL
#空闲连接回收的时间间隔，与test-while-idle一起使用，设置5分钟
spring.datasource.secondary.time-between-eviction-runs-millis=300000
#连接池空闲连接的有效时间 ，设置30分钟
spring.datasource.secondary.min-evictable-idle-time-millis=1800000
spring.datasource.secondary.initial-size=5
#指定连接池中最大的活跃连接数.
spring.datasource.secondary.max-active=50
#指定连接池等待连接返回的最大等待时间，毫秒单位.
spring.datasource.secondary.max-wait=60000
#指定必须保持连接的最小值
spring.datasource.secondary.min-idle=5
##########################################################################





#------------rabbitMQ--------------------------
#配置rabbitmq的安装地址、端口以及账户信息
#注意port 15672是管理端的端口
spring.application.name=purge-rabbitmq
spring.rabbitmq.host=192.168.2.11
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=12315
# 消息发送至exchange callback
spring.rabbitmq.publisher-confirms=true
# 消息发送至queue 失败才callback
spring.rabbitmq.publisher-returns=false
# 消费消息手动删除
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.max-interval=1000
spring.rabbitmq.listener.simple.retry.initial-interval=1000
spring.rabbitmq.listener.simple.retry.max-attempts=3


