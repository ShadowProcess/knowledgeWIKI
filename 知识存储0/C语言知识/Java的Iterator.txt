从iterator接口中我们看到iterator接口提供的方法有hasNext(),next(),remove()方法。


当创建完成指向某个集合或者容器的Iterator对象后，
这时的指针其实指向的是第一个元素的上方，
即指向一个空元素
当调用hasNext方法的时候，
只是判断下一个元素的有无，并不移动指针
当调用next方法的时候，
向下移动指针，并且返回指针指向的元素，
如果指针指向的内存中没有元素，会抛出异常。

remove方法删除的元素是指针指向的元素。
如果当前指针指向的内存中没有元素，那么会抛出异常。
所以remove方法一般和next方法配合使用，其删除的是最近next方法返回的元素。

同时应该注意，iterator的remove方法不可以和collcetion接口定义的remove方法重叠使用，
这样会有并发修改错误（java.util.ConcurrentModificationException）
